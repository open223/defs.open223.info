@prefix s223: <http://data.ashrae.org/standard223#> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix bacnet: <http://data.ashrae.org/bacnet/2020#> .
@prefix g36: <http://data.ashrae.org/standard223/1.0/extensions/g36#> .

@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix doc: <http://sample.org/doc#> .
@prefix pub: <pub:> .

pub:root a doc:Document ;
    rdfs:comment """**Semantic Data Model for Analytics and Automation Applications in Buildings**

**(This foreword is not part of this standard. It is merely informative and does not contain requirements necessary for conformance to the standard. It has not been processed according to the ANSI requirements for a standard and may contain material that has not been subject to public review or a consensus process. Unresolved objectors on informative material are not offered the right to appeal at ASHRAE or ANSI.)**

**FOREWORD**

*The motivation for this standard is to facilitate the deployment and use of software tools that leverage the data available from 
building automation systems to improve building system operation in a variety of ways. This standard builds upon standards 
and tools developed by the World Wide Web Consortium (W3C). Using those general tools, this standard defines modeling constructs for 
use in creating amachine-readable representations of building systems, the building spaces that they serve, and the measurement 
and control points used to provide a safe and comfortable environment for the building occupants. The result is a searchable 
knowledge graph that can be used to automate the data mapping and configuration needed to deploy analytical, management, and control 
tools for the built environment.*
""" ;
    doc:subclauses (
        pub:purpose
        pub:scope
        pub:definitions
        pub:conceptual-framework
        pub:equipment 
        pub:connection
        pub:grouping
        pub:system
        pub:space
        pub:zone
        pub:enumerations
        pub:property_value
        pub:reference-equipment-models
        pub:AnnexA
        pub:AnnexB
        ) .

pub:purpose
    doc:title "PURPOSE" ;
    rdfs:comment "The purpose of this standard is to define formal knowledge concepts and a methodology to apply them to create interoperable, machine-readable semantic frameworks for representing building automation and control data, and other building system information.".

pub:scope
    doc:title "SCOPE" ;
        rdfs:comment """This standard provides a comprehensive way to apply semantic formalisms to represent the context of building system data and relationships between the associated building mechanical system components so that software applications can find and understand the information in an automated way. It is intended to facilitate the development and implementation of building analytics tools and enterprise knowledge applications that can implement many building system functions, including:

(a) automated fault detection and diagnostics,
(b) building system commissioning,
(c) digital twins,
(d) optimization of energy use, and
(e) smart grid interactions.
""" .

pub:definitions
    doc:title "DEFINITIONS" ;
    doc:subclauses (
        pub:definitions-terms
        pub:abbrev
        ) .

pub:definitions-terms
    doc:title "Terms Defined for this Standard" ;
    rdfs:comment """
**Connectable:** an abstract class that represents a thing (Equipment or DomainSpace) that can be connected via ConnectionPoints and Connections.

**Connection:** the modeling construct used to represent a physical thing (e.g., pipe, duct, or wire) that is used to convey some Medium (e.g., water, air, or electricity) between two Connectable things.

**ConnectionPoint:** an abstract modeling construct used to represent the fact that one Connectable thing can be connected to another Connectable thing using a Connection. It is the abstract representation of the flange, wire terminal, or other physical feature where a connection is made.

Domain: a categorization of building service or specialization used to characterize equipment or spaces in a building. Example domains include HVAC, lighting, and plumbing.

**DomainSpace:** a portion or the entirety of a PhysicalSpace that is associated with a Domain, such as lighting, HVAC, or physical security. DomainSpaces can be combined to form a Zone.

**Duct:** a subclass of Connection that is used to transport air such as supply, return, and exhaust in HVAC (Heating, Ventilation, and Air Conditioning) systems. 

**ElectricWire:** a subclass of Connection that represents one or more flexible conductors used to convey electricity.

**Equipment:** the modeling construct used to represent a device designed to accomplish a specific task. Examples include a pump, fan, heat exchanger, luminaire, temperature sensor, or flow meter. A piece of equipment can contain another piece of equipment. For example, an air handling unit can contain a cooling coil.

**PhysicalSpace:** an architectural concept that represents a room, a collection of rooms such as a floor, a part of a room, or any physical space that might not even be thought of as a room, such as a patio.

**Pipe:** a subclass of Connection that is used primarily to transport liquids and gases such as water, sewage, natural gas, and compressed air.

**System:** a logical grouping (collection) of Equipment for some functional purpose. Examples of possible systems include an air distribution system, or a hot water system. Systems can contain other Systems. A System does not participate in Connections.

**Zone:** a collection of DomainSpaces of a specific domain that are grouped together from the perspective of building services or controls.

""" .

pub:abbrev
    doc:title "Abbreviations and Acronyms Used in this Standard" ;
    rdfs:comment """

IFC     Industry Foundation Class
RDF     Resource Description Framework
SHACL   Shapes Constraint Language
SPARQL  SPARQL Protocol and RDF Query Language
Turtle  Terse RDF Triple Language
W3C     Worldwide Web Consortium

""" .

pub:conceptual-framework

    doc:title "CONCEPTUAL FRAMEWORK FOR SEMANTIC MODELING OF BUILDING SYSTEMS AND DATA" ;
    rdfs:comment """
This standard defines modeling constructs for use in creating a machine-readable representation of building systems, the building spaces that they serve, 
and the measurement and control points used to provide a safe and comfortable environment for the building occupants. The standard can be considered a 
toolkit of semantic building blocks and rules for using them to create a semantic model of a particular building or campus of buildings. The resulting model provides 
a way for software applications to determine the relationships between the mechanical equipment in the building (i.e., AHU 1 gets chilled water from CH 3 
and provides conditioned air to VAV Boxes 12 through 15 serving rooms on the third floor) and the meaning of measurements that are available 
(i.e., T16 is a temperature sensor measuring the temperature of the air stream exiting AHU 1).

The model does not directly contain telemetric data about the real-time operation or past operation of the building systems. It does provide information 
about the meaning or context of that data and defines external references that are used to point to a source of the data values, thus enablling analytics
 applications to find them. If the data source is a BACnet building automation and control system, the external reference contains the necessary information 
 for analytic software to learn which BACnet device, object and property corresponds to the desired piece of information. This enables construction of a BACnet
 message used to read the value.

These capabilities are achieved by applying concepts, standards, and query tools developed and deployed for information and data science applications outside the building domain. A primary commercial driver for developing these standards and tools is the Semantic Web, an extension of the World Wide Web that was created to make the semantic meaning of data accessible from the Internet machine readable.

This standard uses Resource Description Framework (RDF) (W3C) and its extended schema (RDFS) to represent the semantic ideas in the model. RDF is a general method for representing semantic ideas as of a triple. A triple consists of a subject, a predicate, and either a literal or an object. For example:

Jane hasFriend Dave

Jane hasSupervisor Mary

In this example Jane is the subject of both triples, there are two different predicates, hasFriend and hasSupervisor, and there are two different objects,
 Dave and Mary. The number of triples is expanded as needed to capture the desired information. The collection of triples represents a directed
  multi-graph that can be searched or queried to answer questions or to infer information that may not be explicit in the graph. Figure 4-1 is a graph that
   corresponds to this example.

![Example triple graph.](figures/Figure_4-1_Triple_Example.svg)

This standard defines subjects, predicates, and objects relevant to the building space that are used to build a multi-graph representing a specific
 building or group of buildings. A compelling advantage of this graph-based approach is the ability to combine semantic graphs derived from complementary
 semantic models that apply to the same building. This makes it possible to take advantage of the combined information from distinct domains. For example, a 
 RealEstateCore model that captures how spaces are assigned to different tenants in a building linked to the spaces represented in a Standard 223 model 
 results in a semantic model containing the combined information. In a similar way, it is possible to link information from a computerized maintenance 
 management system or an asset management system to the semantic graph of a Standard 223 model by adding a triple that binds a piece of equipment to its 
 representation in the other system.. 

A model constructed from this standard describes the topology of the equipment and spaces in a building but not the geometric details. Linking a 
Standard 223 model with an RDF representation of a building information model would add that geometric information. 

Another advantage of using RDF to model building systems is that a query language standard, SPARQL (W3C SPARQL), exists and tools that implement SPARQL 
are readily available. A building analytics tool developer needs only to create a library of queries relevant to their application, and use these queries 
to interrogate any Standard 223 conformant model to find what they need from that building for their application.

Using RDF also provides a way to build conformance constraints into this standard in a way that enables conformance to be algorithmically verified. 
This is done by using a different W3C standard, Shapes Constraints Language (SHACL) (W3C SHACL). SHACL defines a way to constrain the construction of RDF 
graphs through the application of custom developed rules called shapes. The normative constraints described in this standard are formalized in 
SHACL shapes. The description of each concept defined in this standard includes a table that lists related conformance constraints defined by these 
SHACL shapes. Readily available SHACL reasoners check whether or not a particular model instance conforms to the shapes defined in this standard.

SHACL is also used in this standard to derive implicit information. The triples generated from this inference process enhance the ability to make useful 
queries without the burden of a modeler crafting each predicate that might be useful in common searches. The goal is to make model development easier without sacrificing the utility application 
developers need to find what they are looking for. The description of each concept defined in this standard with related inference rules includes a 
table that lists the relevant SHACL shapes that apply the inferencing.

The Terse RDF Triple Language (W3C Turtle) defines a textual syntax to represent and exchange RDF models.

Because this standard includes references to measurements of physical properties, it is necessary to provide a model representation of units of measure 
as well as what those units are quantifying (e.g., temperature, power, etc.). This standard builds upon the "Quantities, Units, Dimensions and 
Types" (QUDT) ontology which is the leading open-source model expressed in RDF/SHACL. The QUDT model is documented at https://qudt.org. The key 
concepts used here are the classes qudt:Unit and qudt:QuantityKind.

The normative content of this standard is documented in an RDF model textualized using Turtle (see `pub:AnnexA`). All models conforming to this standard shall be textualized using Turtle.

Because it is anticipated that models conforming to this standard will be combined with other semantic models, it is necessary to define a namespace for the 
concepts defined by this standard to avoid any possible ambiguities that might arise from the same name being used in the complementary model. In this standard 
and all conforming models, the prefix “s223:” shall be used in the name of each concept (class and property) defined by this standard, e.g., s223:Equipment. 
The prefix “s223:” is reserved for this standard. Users who extend this standard with additional concept definitions shall use a different prefix for their concepts. The 
use of different prefixes for different models allows the combination of models without ambiguity, and makes it possible to enforce a closed-world assumption 
for concepts that use the "s223:" prefix, namely allowing the use of a property with a given class only if a SHACL shape has been defined for that use (see `s223:Concept`). The 
closed-world assumption is a fundamental principle of semantic modeling that states that if a concept is not defined 
in the model, then it is not part of the model. This principle is essential for the development of semantic models that can be used to make inferences about the 
real world. Managing the use of the "s223:" prefix also makes it possible to test for strict conformance to the standard.

The concepts and properties mentioned below were designed to aid in standard development using RDF and SHACL exclusively and avoiding any dependence on OWL axioms. 
This approach was chosen to avoid some of the shortcomings of using OWL in industrial settings, such as the open world assumption, the many flavors of OWL and their 
support, and the sometimes counterintuitive implications of OWL reasoning for non-ontologists. (For example, if an instance satisfies the OWL axioms for a class, then 
it is inferred to be an instance of that class). The use of SHACL shapes to define constraints and inferencing rules is a more intuitive way to define intended
model behavior and to verify conformance to the standard. The two most-used OWL inferences, supporting symmetric and inverse properties, are redefined in this standard 
using SHACL rules.

""" ;
doc:subclauses (
    pub:Conform-Constraints
    pub:Implicit-Info
    pub:Text-Serialization
    pub:Units
    pub:Namespace
    s223:Class
    s223:Concept
    s223:SymmetricProperty
    s223:inverseOf
    s223:abstract
)
 .

pub:Conform-Constraints
doc:title "Conformance Constraints and Validation";
rdfs:comment """ Using RDF also provides a way to build conformance constraints into this standard in a way that enables conformance to be algorithmically 
verified. This is done by using a different W3C standard, Shapes Constraints Language (SHACL) (W3C SHACL). SHACL defines a way to constrain how RDF graphs 
can be constructed through the application of custom developed rules called shapes. The normative constraints described in this standard are formalized in 
SHACL shapes. The description of each concept defined in this standard includes a table that lists related conformance constraints defined by these SHACL 
shapes. Readily available SHACL reasoners can use the shapes defined in this standard to determine if a particular model instance violates conformance to the standard.

When a SHACL reasoner is applied to a model, discrepancies from the conformance constraints result in a message from the reasoner with one of three levels 
of severity (sh:severity).

A message with a severity sh:Info means that a model construct is incomplete. 

A message with a severity sh:Warning means that a model construct is used in an unexpected way.

A message with a severity sh:Violation means a model construct is invalid and does not comply with the standard.

The concepts and properties defined in `s223:Class` through `s223:abstract` were designed to aid in standard development using RDF and SHACL exclusively and
avoiding any dependence on OWL
axioms. This approach was chosen to avoid some of the shortcomings of using OWL in industrial settings, such as the open world assumption, the many flavors 
of OWL and their support, and the sometimes counterintuitive implications of OWL reasoning for non-ontologists. (For example, if an instance satisfies the 
OWL axioms for a class, then it is inferred to be an instance of that class). The use of SHACL shapes to define constraints and inferencing rules is a more 
intuitive way to define intended model behavior and to verify conformance to the standard. The two most-used OWL inferences, supporting symmetric and inverse
 properties, are redefined in this standard using SHACL rules.
 """.

pub:Implicit-Info
doc:title "Deriving Implicit Information from Inference Rules";
rdfs:comment """ SHACL is also used in this standard to derive implicit information via a process called inferencing. Inference rules are used to define 
how new triples are generated. The triples generated from this inference process enhance the ability to make useful queries without the burden of a modeler 
crafting each one. The goal is to make model development easier without sacrificing the utility application developers need to find what they are looking 
for. The description of each concept defined in this standard with related inference rules includes a table that lists the relevant SHACL shapes that specify 
the inferencing. """.

pub:Text-Serialization
doc:title "Textual Serialization";
rdfs:comment """ The Terse RDF Triple Language (W3C Turtle) defines a textual syntax to represent and exchange RDF models.
The normative content of this standard is documented in an RDF model textualized using Turtle (see Clause 15). All models conforming to this standard shall 
be textualized using Turtle.
""".

pub:Units
doc:title "Units of Measure";
rdfs:comment """ Because this standard includes references to measurements of physical properties, it is necessary to provide a model representation of 
units of measure as well as what those units are quantifying (e.g. temperature, power, etc.). This standard builds upon the “Quantities, Units, Dimensions 
and Types” (QUDT) ontology which is the leading open-source model expressed in RDF/SHACL. The QUDT model is documented at https://qudt.org. The key concepts 
used here are the classes qudt:Unit and qudt:QuantityKind. The 223 standard is compatible with Version 2.1.41 of QUDT and is expected to be compatible with 
all newer versions as well.""".

pub:Namespace
doc:title "Namespace";
rdfs:comment """ Because it is anticipated that models conforming to this standard will be combined with other semantic models, it is necessary to define 
a namespace for the concepts defined by this standard to avoid any possible ambiguities that might arise from a similar name used in the complementary model.
 In this standard and all conforming models, the prefix “s223:” shall be used in the name of each concept (class and property) defined by this standard, 
 e.g., s223:Equipment.
 """.

 s223:Concept
 doc:subclauses(
    s223:hasProperty
 ).
   
pub:equipment 
    doc:title "EQUIPMENT" ;
    rdfs:comment """This clause is the top level of the hierarchical structure of the portion of the model that represents the characteristics and features of physical equipment that make up the building systems being modeled. Equipment can be connected to other Equipment or DomainSpaces (See `pub:connectedness`). Equipment can optionally contain other pieces of equipment, providing a way to represent its constituent parts within the model (see `pub:equipment-containment`). Equipment can also be grouped together to define a System (see `pub:system`).
    
""" ;
    doc:subclauses (
        s223:Equipment
        s223:contains
        s223:hasRole
        s223:hasPhysicalLocation
        pub:measuring-equipment
        s223:Actuator
        s223:Controller
    ) .

pub:measuring-equipment
    doc:title "Measuring equipment" ;
    rdfs:comment """This clause is the top level of the hierarchical structure of the model portion that represents the characteristics of a piece of equipment that measures something.""" ;
    doc:subclauses (
        s223:AbstractSensor
        s223:Sensor
        s223:DifferentialSensor
    ) .

s223:AbstractSensor
   doc:title "Abstract Sensor";
   doc:subclauses (
       s223:hasMeasurementResolution
       s223:observes
       s223:hasObservationLocation
           
   ) .

s223:Sensor
    doc:subclauses (
        s223:FlowSensor
        s223:HumiditySensor
        s223:PressureSensor
        s223:TemperatureSensor
        s223:ConcentrationSensor
        s223:LightSensor
        s223:ParticulateSensor
        s223:OccupancySensor
    ) .

s223:LightSensor
    doc:subclauses(
        s223:CorrelatedColorTemperatureSensor
        s223:DuvSensor
        s223:IlluminanceSensor
    ) .

s223:OccupancySensor
    doc:subclauses(
        s223:OccupantCounter
        s223:OccupantMotionSensor
        s223:OccupantPresenceSensor
    ) .

s223:DifferentialSensor
    doc:title "Differential Sensor";
    doc:subclauses(
        s223:hasObservationLocationHigh
        s223:hasObservationLocationLow 
    ).

s223:Controller
    doc:title "Controller";
    doc:subclauses(
        s223:Function
        s223:executes
    ) .

s223:Function
    doc:title "Function";
    doc:subclauses(
        s223:hasInput
        s223:hasOutput
    ) .

s223:ConnectionPoint
    doc:subclauses (
        s223:BidirectionalConnectionPoint
        s223:InletConnectionPoint
        s223:OutletConnectionPoint
        s223:mapsTo
        s223:hasMedium
    ) .

s223:Actuator
    doc:title "Actuator" ;
    rdfs:comment """Actuators are physical entities that receive control signals and actuate equipment.""" ;
    doc:subclauses (
        s223:actuates
        s223:actuatedByProperty
    ) .
    
pub:connection
   doc:title "CONNECTION" ;
   rdfs:comment """This clause is the top level of the hierarchical structure of the portion of the model that represents the characteristics and features of connections that provide a means for a medium such as air, water, or electricity, to flow from one place to another. Examples of connections are ducts, pipes, and wires.""" ;
       doc:subclauses (
        s223:Connectable
        s223:ConnectionPoint
        s223:Connection
        s223:Junction
        pub:connectedness
        s223:hasMedium
        ) .
pub:connectedness
doc:title "Relations Describing Connectedness";
rdfs:comment """The collection of relations defined for Connectable, ConnectionPoint, and Connection is intended to facilitate model queries that answer questions about how equipment is connected and to what it is connected. These relations are shown in Figure 6-3.

![Connection Relations.](figures/Figure_6-1_Connection_Relationships.svg)

It is not necessary for a model developer to create each of these relations individually. A model can be created using a simpler construct shown in Figure 6-4 using the cnx relation. Inference rules can then be applied to generate the complete set shown in Figure 6-3. The intent is to simplify model development without losing the connectedness relationships that facilitate model queries.

![CNX Relations.](figures/Figure_6-2_CNX_Relationships.svg)
""";
doc:subclauses (
     s223:connected
        s223:connectedTo
        s223:connectedFrom
        s223:connectedThrough
        s223:connectsTo
        s223:connectsFrom
        s223:connectsThrough
        s223:connectsAt
        s223:hasConnectionPoint
        s223:isConnectionPointOf
        s223:cnx
)
.

s223:Connection
    doc:subclauses (
        s223:Pipe
        s223:Duct
        s223:ElectricWire
    ) .

pub:grouping
    doc:title "GROUPING" ;
    rdfs:comment """This clause is the top level of the hierarchical structure of the portion of the model that represents the general concept that some modeling elements can be grouped together using several different concepts. This standard describes these concepts and constrains their use.""" ;
    doc:subclauses (
        pub:equipment-containment
        pub:system-membership
        pub:physical-space-containment
        pub:domain-space-containment
        pub:zone-containment
    ) .

pub:equipment-containment
    doc:title "Equipment Containment" ;
    rdfs:comment """A piece of equipment can only contain other pieces of equipment. For example, a fan can be contained by an air handling unit. The relation contains is used to describe a piece of equipment containing another piece of equipment (see 's223:contains'). The relationship mapsTo relates a ConnectionPoint of a contained equipment to the ConnectionPoint of a containing equipment (see `s223:mapsTo`). For example, the inlet to a heating coil contained in a fan coil unit may map to the inlet of the fan coil unit. Any air connection to the fan coil unit inlet is supplying air to the inlet of the heating coil as well. Multiple pieces of equipment contained by the same piece of equipment may connect to each other, however, they may not connect to equipment that are not also contained. To indicate how a contained piece of equipment connects to an external piece of equipment, the relationship mapsTo is used. MapsTo will relate the connection point of a contained equipment to the connection point of the containing equipment, then the connection point of the containing equipment may connect to the external equipment.""" .

pub:system
    doc:title "SYSTEM" ;
    rdfs:comment """A System is a task-oriented collection of interacting or interrelated Equipment defined by the modeler. Examples of possible systems are an air distribution system, or a hot water system. Systems can be associated with other Systems using the relation hasMember (see `pub:system-membership`)  A System may be associated with an EnumerationKind-Role (see `s223:hasRole`).
""" ;
    doc:subclauses (
        s223:System
        s223:hasMember
        s223:hasBoundaryConnectionPoint
        s223:hasOptionalConnectionPoint
    ) .

pub:system-membership
    doc:title "System Membership" ;
    rdfs:comment """A system can group other pieces of equipment and sub-systems together using the relation hasMember (see `s223:hasMember`).""" .

pub:zone
    doc:title "ZONE" ;
    rdfs:comment "Zones are collections of domain spaces of a specific domain grouped together from the perspective of building services or controls.  Zones can be collected together into groups (see `pub:zone-containment`)." ;
    doc:subclauses (
        s223:Zone
        s223:hasDomainSpace
    ) .

pub:zone-containment
    doc:title "Zone Containment" ;
    rdfs:comment """ZoneGroups are collections of zones. ZonesGroups may relate to Zones using the relation hasZone (see `s223:hasZone`).""" ;
    doc:subclauses (
        s223:ZoneGroup
        s223:hasZone
    ) .

pub:space
    doc:title "SPACE" ;
    rdfs:comment "There are two types of spaces. Physical spaces represent the architectural constructs in a building like rooms, auditoriums, corridors, etc. Physical spaces enclose (see `s223:encloses`) domain spaces. Domain spaces represent portions of a physical space that pertain to different building services. A physical space may represent a kitchen, but the lighting domain space it encloses describes the lighting area within the kitchen. " ;
    doc:subclauses (
        pub:domain-space
        pub:physical-space
    ) .

pub:domain-space
    doc:title "Domain Space" ;
    rdfs:comment "A DomainSpace is a subclass of Connectable (see `s223:Connectable`) and represents atomic subdivision (or component) of a Zone and is associated with a domain such as Lighting, HVAC, etc. (see `s223:EnumerationKind-Domain`). DomainSpaces can be viewed as the endpoints of building services. A lighting domain space may be a part of an auditorium that receives light from a group of luminaires. An occupancy space may be a building area that is measured by occupancy sensors (see `s223:OccupancySensor`). An HVAC domain space may be part of an office or room that receives air from a VAV (see `s223:VAV`). An HVAC domain space may also be a significant waypoint in an air distribution system, like a plenum. Domain spaces generally have properties that pertain to control of the systems serving them (e.g., a lighting domain space may have an occupancy property for when the space is occupied). " ;
    doc:subclauses (
        s223:DomainSpace
        s223:hasDomain
    ) .

pub:physical-space
    doc:title "Physical Space" ;
    rdfs:comment "A portion of an enclosure that is distinct from other physical spaces." ;
    doc:subclauses (
        s223:PhysicalSpace
        s223:contains
        s223:encloses
    ) .

pub:physical-space-containment
    doc:title "Physical Space Containment" ;
    rdfs:comment """A physical space (see `s223:PhysicalSpace`) can contain other physical spaces. This containment relationship is used to represent collections of rooms that make up a floor in a building, a building that contains a collection of rooms or floors, a campus that contains a collection of buildings or some other nested grouping of physical spaces. Physical spaces may also enclose domain spaces (see `s223:DomainSpace`). Enclosement indicates that the domain space is completely within a physical space. A physical space may enclose one or more domain spaces. For example, an auditorium may have several different lighting domain spaces with independently controlled lights.""" .


pub:domain-space-containment
    doc:title "Domain Space Containment" ;
    rdfs:comment """Physical spaces may enclose domain spaces, indicating their physical location and borders. Zones may also group domain spaces together using the relationship hasDomainSpace (see `s223:hasDomainSpace`). This grouping is from the perspective of building controls rather than physical location.""" .

pub:property_value
    doc:title "PROPERTIES AND VALUES" ;
    rdfs:comment "Things have properties, and properties have values." ;
    doc:subclauses (
        s223:Property
        s223:ActuatableProperty
        s223:ObservableProperty
        s223:EnumerableProperty
        s223:QuantifiableProperty
        s223:QuantifiableActuatableProperty
        s223:QuantifiableObservableProperty
        s223:EnumeratedObservableProperty
        s223:EnumeratedActuatableProperty
        s223:ExternalReference
        s223:hasValue
        qudt:hasUnit
        qudt:hasQuantityKind
        s223:hasAspect
        s223:ofSubstance
        s223:ofMedium
        s223:composedOf
        s223:hasExternalReference
    ) .

s223:EnumerableProperty
    doc:subclauses (
        s223:hasEnumerationKind
    ) .

s223:ExternalReference
    doc:subclauses (
        s223:BACnetExternalReference
    ) .

s223:BACnetExternalReference
    doc:subclauses (
        bacnet:device-name
        bacnet:device-identifier
        bacnet:object-name
        bacnet:object-identifier
        bacnet:property-identifier
        bacnet:property-array-index
        bacnet:priority-for-writing
    ) .

s223:Setpoint
    doc:subclauses (
        s223:hasDeadband
    ) .

pub:enumerations
    doc:title "ENUMERATIONS";
    rdfs:comment """Enumerations are sets of closed values (they cannot take on values outside of what is explicitly listed in the definition) and named (each value has a unique name). The values within an enumeration share a "kind," which communicates how the enumerations are intended to be used.

The standard uses enumerations to convey groups of useful values for describing attributes of Properties, Equipment, and other things in the model.
    """ ;
    doc:subclauses (
        s223:EnumerationKind
        s223:EnumerationKind-Aspect
        s223:EnumerationKind-Binary
        s223:EnumerationKind-Direction
        s223:EnumerationKind-Domain
        s223:EnumerationKind-HVACOperatingMode
        s223:EnumerationKind-HVACOperatingStatus
        s223:EnumerationKind-Numerical
        s223:EnumerationKind-Occupancy
        s223:EnumerationKind-OnOff
        s223:EnumerationKind-Phase
        s223:EnumerationKind-Position
        s223:EnumerationKind-Role
        s223:EnumerationKind-RunStatus
        s223:EnumerationKind-Speed
        s223:EnumerationKind-Substance
    ) .

s223:EnumerationKind-Phase
    doc:subclauses(
        s223:Phase-Gas
        s223:Phase-Liquid
        s223:Phase-Solid
        s223:Phase-Vapor
        s223:hasThermodynamicPhase
    ) .

s223:Electricity-AC
    doc:subclauses (
        s223:hasNumberOfElectricalPhases
        doc:electricalwiringv2-p1
        doc:electricalwiringv2-p2
        doc:electricalwiringv2-p3
        doc:electricalwiringv2-p4
        doc:electricalwiringv2-p5
        doc:electricalwiringv2-p6
        doc:electricalwiringv2-p7
        doc:electricalwiringv2-p8
    ) .

doc:electricalwiringv2-p1
    doc:title "1-Phase 3-Wire (LLN) Delta 240V L-L" ;
    rdfs:comment """
This is an example Delta 240 V transformer.

![Caption](figures/electricalwiringv2-p1.jpg)

| Medium | # wires | L-L | L-N | Countries | Phase Possibilities |
|:------------------:|:-----:|:----:|:----:|:-------:|:-------------------:|
| AC-240VLL-120VLN-3PH-60Hz | 3 | 240 | 120 | US | AN, BN, AB, ABN |
| AC-240VLL-1PH-60Hz | 2 | 240 | - | US | AB |
| AC-120VLN-1PH-60Hz | 2 | - | 120 | US | AN, BN |
""" .

doc:electricalwiringv2-p2
    doc:title "3-Phase 3-Wire (LLL) Delta 480V L-L" ;
    rdfs:comment """
This is an example Delta 480 V transformer.

![Caption](figures/electricalwiringv2-p2.jpg)

| Medium | # wires | L-L | L-N | Countries | Phase Possibilities |
|:------------------:|:-----:|:----:|:----:|:-------:|:-------------------:|
| AC-480VLL-3PH-60Hz | 3 | 480 | - | US | ABC, AB, BC, AC |
| AC-480VLL-1PH-60Hz | 2 | 480 | - | US | AB, BC, AC |
""" .

doc:electricalwiringv2-p3
    doc:title "3-Phase 3-Wire (LLL) Delta 600V L-L" ;
    rdfs:comment """
This is an example Delta 600 V transformer.

![Caption](figures/electricalwiringv2-p3.jpg)

| Medium | # wires | L-L | L-N | Countries | Phase Possibilities |
|:------------------:|:-----:|:----:|:----:|:-------:|:-------------------:|
| AC-600VLL-3PH-60Hz | 3 | 600 | - | US | ABC, AB, BC, AC |
| AC-600VLL-1PH-60Hz | 2 | 600 | - | US | AB, BC, AC |
""" .

doc:electricalwiringv2-p4
    doc:title "3-Phase 4-Wire (LLLN) Delta 240V L-L" ;
    rdfs:comment """
This is an example 3-Phase 4-Wire Delta 240 V transformer.

![Caption](figures/electricalwiringv2-p4.jpg)

| Medium | # wires | L-L | L-N | Countries | Phase Possibilities |
|:------------------:|:-----:|:----:|:----:|:-------:|:-------------------:|
| AC-240VLL-208VLN-120VLN-3PH-60Hz | 4 | 240 | 208, 120 | US | AN, BN, CN, AB, BC, AC, ABN, BCN, ACN, ABC, ABCN |
| AC-240VLL-3PH-60Hz | 3 | 240 | - | US | ABC |
| AC-240VLL-120VLN-1PH-60Hz | 3 | 240 | 120 | US | ABN, BCN, AN, BN |
| AC-240VLL-1PH-60Hz | 2 | 240 | - | US | AB, BC, AC |
| AC-120VLN-1PH-60Hz | 2 | - | 120 | US | AN, BN |
""" .

doc:electricalwiringv2-p5
    doc:title "3-Phase 4-Wire (LLLN) Delta 480V L-L" ;
    rdfs:comment """
This is an example 3-Phase 4-Wire Delta 480 V transformer.

![Caption](figures/electricalwiringv2-p5.jpg)

| Medium | # wires | L-L | L-N | Countries | Phase Possibilities |
|:------------------:|:-----:|:----:|:----:|:-------:|:-------------------:|
| AC-480VLL-415VLN-240VLN-3PH-60Hz | 4 | 480 | 415, 240 | US | AN, BN, CN, AB, BC, AC, ABN, BCN, ACN, ABC, ABCN |
| AC-480VLL-3PH-60Hz | 3 | 480 | - | US | ABC |
| AC-480VLL-240VLN-1PH-60Hz | 3 | 480 | 240 | US | ABN, BCN, AN, BN |
| AC-480VLL-1PH-60Hz | 2 | 480 | - | US | AB, BC, AC |
| AC-240VLN-1PH-60Hz | 2 | - | 240 | US | AN, BN |
""" .

doc:electricalwiringv2-p6
    doc:title "3-Phase 4-Wire (LLLN) Wye 208V L-L" ;
    rdfs:comment """
This is an example 3-Phase 4-Wire  Wye 208 V transformer.

![Caption](figures/electricalwiringv2-p6.jpg)

| Medium | # wires | L-L | L-N | Countries | Phase Possibilities |
|:------------------:|:-----:|:----:|:----:|:-------:|:-------------------:|
| AC-208VLL-120VLN-3PH-60Hz | 4 | 208 | 120 | US | AN, BN, CN, AB, BC, AC, ABN, BCN, ACN, ABC, ABCN |
| AC-208VLL-3PH-60Hz | 3 | 208 | - | US | ABC |
| AC-208VLL-120VLN-1PH-60Hz | 3 | 208 | 120 | US | ABN, BCN, ACN |
| AC-208VLL-1PH-60Hz | 2 | 208 | - | US | AB, BC, AC |
| AC-120VLN-1PH-60Hz | 2 | - | 120 | US | AN, BN, CN |
""" .

doc:electricalwiringv2-p7
    doc:title "2-Phase 4-Wire (LLLN) Wye 415V L-L" ;
    rdfs:comment """
This is an example 2-Phase 4-Wire Wye 415 V transformer.

![Caption](figures/electricalwiringv2-p7.jpg)

| Medium | # wires | L-L | L-N | Countries | Phase Possibilities |
|:------------------:|:-----:|:----:|:----:|:-------:|:-------------------:|
| AC-415VLL-240VLN-3PH-60Hz| 4 | 415 | 240 | ASTL | AN, BN, CN, AB, BC, AC, ABN, BCN, ACN, ABC, ABCN |
| AC-415VLL-3PH-60Hz | 3 | 415 | - | ASTL | ABC |
| AC-415VLL-240VLN-1PH-60Hz | 3 | 415 | 240 | ASTL | ABN, BCN, ACN |
| AC-415VLL-1PH-60Hz | 2 | 415 | - | ASTL | AB, BC, AC |
| AC-240VLN-1PH-60Hz | 2 | - | 240 | ASTL | AN, BN, CN |
""" .

doc:electricalwiringv2-p8
    doc:title "2-Phase 4-Wire (LLLN) Wye 480V L-L" ;
    rdfs:comment """
This is an example 2-Phase 4-Wire Wye 480 V transformer.

![Caption](figures/electricalwiringv2-p8.jpg)

| Medium | # wires | L-L | L-N | Countries | Phase Possibilities |
|:------------------:|:-----:|:----:|:----:|:-------:|:-------------------:|
| AC-480VLL-277VLN-3PH-60Hz | 4 | 480 | 27 | US | AN, BN, CN, AB, BC, AC, ABN, BCN, ACN, ABC, ABCN |
| AC-480VLL-3PH-60Hz | 3 | 480 | - | US | ABC |
| AC-480VLL-277VLN-1PH-60Hz | 3 | 480 | 277 | US | ABN, BCN, ACN |
| AC-480VLL-1PH-60Hz | 2 | 480 | - | US | AB, BC, AC |
| AC-277VLN-1PH-60Hz | 2 | - | 277 | US | AN, BN, CN |
""" .


pub:reference-equipment-models
doc:title "REFERENCE FOR EQUIPMENT AND SYSTEMS";
rdfs:comment """ This clause contains component model templates for commonly found equipment in building.""";
doc:subclauses (
s223:AirHandlingUnit
s223:Battery
s223:Boiler
s223:ChilledBeam
s223:Chiller
s223:Compressor
s223:CoolingTower
s223:Damper
s223:Door
s223:ElectricBreaker
s223:ElectricMeter
s223:ElectricOutlet
s223:ElectricTransformer
s223:EthernetSwitch
s223:Fan
s223:FanCoilUnit
s223:Filter
s223:FumeHood
s223:Furnace
s223:Generator
s223:HeatExchanger
s223:HeatPump
s223:Humidifier
s223:Humidistat
s223:Inverter
s223:Motor
s223:Luminaire
s223:PhotovoltaicModule
s223:Pump
s223:RadiantHeater
s223:Radiator
s223:ElectricResistanceElement
s223:SolarThermalCollector
s223:TerminalUnit
s223:Thermostat
s223:Turbine
s223:Valve
s223:VariableFrequencyDrive
s223:Window
s223:WindowShade
)
.
s223:Valve
doc:subclauses (
        s223:ThreeWayValve
        s223:TwoWayValve   
    ).


s223:HeatExchanger
doc:subclauses(
    s223:Coil
    s223:CoolingCoil
    s223:HeatingCoil
).

s223:TerminalUnit
doc:subclauses(
s223:DualDuctTerminal
s223:FanPoweredTerminal
s223:SingleDuctTerminal
).


pub:AnnexA
doc:title "RDF REPRESENTATION OF THIS STANDARD (NORMATIVE)";
rdfs:comment """This text of this standard was generated from and RDF Model. An electronic repository containing a normative Turtle representation of the can be found at (URL needed). A user may wish to use electronic tools to browse and study the details of the standard, use the equipment types defined in the standard to build a building-specific information model, apply the SHACL constraints to test a building specific model for conformance to the standard, or other uses.

""" .

pub:AnnexB
doc:title "INFORMATIVE ANNEX: G36 EXTENSION";
rdfs:comment """This extension uses the concepts defined in the 223 standard to model the ASHRAE Guideline 36 air-side equipment (ASHRAE, 2018),
including classes representing the point lists in Section 4 and example model snippets of the control diagrams shown in Appendix A. 
The classes represent the point lists in Section 4 using validation rules that can ensure that a model has the metadata necessary to support Guideline 36 sequences.
These classes can be used to create models of Guideline 36 compliant stystems or validate existing models.
Additionally, this section includes example model snippets of the control diagrams shown in Informative Appendix A of Guideline 36. (Will that be here?)
These example models serve as references for use of the standard and this extension.

""" ;
doc:subclauses(
    doc:VAV_4-1 
    doc:VAV_4-2
    doc:FPTU_4-3
    doc:DDTU_4-4
    doc:DDTU_4-5
    doc:MZ-VAV-AHU_4-6
    doc:DD-AHU_4-7
    doc:SZ-VAV-AHU_4-8
    doc:g36components
)
.

doc:VAV_4-1
    doc:title "VAV Terminal Unit - Cooling Only";
    rdfs:comment "This section describes the classes and example model of the VAV Terminal Unit - Cooling Only described in Section 4.1 and Appendix A, Figure A-1 (cite)";
    doc:subclauses(
        g36:VAVTerminalCoolingOnly
        g36:VAVTerminalCoolingOnlyAnnotation
    )
.

doc:VAV_4-2
    doc:title "VAV Terminal Unit with Reheat";
    rdfs:comment "This section describes the classes and example model of the VAV Terminal Unit with Reheat described in Section 4.2 and Appendix A, Figure A-2 (cite)";
    doc:subclauses(
        g36:VAVTerminalWithReheat
        g36:VAVTerminalWithReheatAnnotation
    )
.
doc:FPTU_4-3
    doc:title "Fan Powered Terminal Unit";
    rdfs:comment "This section describes the classes and example model of the Fan Powered Terminal Unit (Series or Parallel, Constant or Variable Speed Fan) described in Section 4.3 and Appendix A, Figures A-3 and A-4 (cite)";
    doc:subclass (
        g36:FanPoweredTerminal
        g36:FanPoweredTerminalAnnotation
    )
.
doc:DDTU_4-4
    doc:title "Dual Duct Terminal Unit with Inlet Sensors";
    rdfs:comment "This section describes the classes and example model of the Dual Duct Terminal Unit with Inlet Sensors described in Section 4.4 and Appendix A, Figure A-7(cite)";
    doc:subclass (
        g36:DualDuctTerminalWithInletSensors
        g36:DualDuctTerminalWithInletSensorsAnnotation
    )
.
doc:DDTU_4-5
    doc:title "Dual Duct Terminal Unit with Discharge Sensor";
    rdfs:comment "This section describes the classes and example model of the Dual Duct Terminal Unit with Discharge Sensor described in Section 4.5 and Appendix A, Figure A-8(cite)";
    doc:subclass (
        g36:DualDuctTerminalWithDischargeSensor
        g36:DualDuctTerminalWithDischargeSensorAnnotation
    )
.
doc:MZ-VAV-AHU_4-6
    doc:title "Multiple Zone VAV Air Handling Unit";
    rdfs:comment "This section describes the classes and example model of the Multiple Zone VAV Air Handling Unit described in Section 4.6 and Appendix A, Figures A-9 and A-10 (cite)";
    doc:subclauses(
        g36:MultipleZoneVAVAirHandlingUnit 
        g36:MultipleZoneVAVAirHandlingUnitAnnotation
        g36:MultipleZoneVAVAirHandlingUnit-CommonDamper
        g36:MultipleZoneVAVAirHandlingUnit-CommonDamperAnnotation
        g36:MultipleZoneVAVAirHandlingUnit-OADandDP
        g36:MultipleZoneVAVAirHandlingUnit-OADandDPAnnotation
        g36:MultipleZoneVAVAirHandlingUnit-OADandAFMS
        g36:MultipleZoneVAVAirHandlingUnit-OADandAFMSAnnotation
        g36:MultipleZoneVAVAirHandlingUnit-WithReliefDamper
        g36:MultipleZoneVAVAirHandlingUnit-WithReliefDamperAnnotation
        g36:MultipleZoneVAVAirHandlingUnit-OADandAFMS
        g36:MultipleZoneVAVAirHandlingUnit-OADandAFMSAnnotation
        g36:MultipleZoneVAVAirHandlingUnit-WithReliefDamper
        g36:MultipleZoneVAVAirHandlingUnit-WithReliefDamperAnnotation
)
.

doc:DD-AHU_4-7
    doc:title "Dual Fan Dual Duct Air Handling Unit";
    rdfs:comment "This section describes the classes and example model of the Dual Fan Dual Duct Air Handling Unit described in Section 4.7 and Appendix A, Figure A-11 (cite)";
    doc:subclauses(
        g36:DualFanDualDuctAirHandlingUnit
        g36:DualFanDualDuctAirHandlingUnitAnnotation
    )
.

doc:SZ-VAV-AHU_4-8
    doc:title "Single Zone VAV Air Handling Unit";
    rdfs:comment "This section describes the classes and example model of the Single Zone VAV Air Handling Unit described in Section 4.8 and Appendix A, Figure A-12 (cite)";
    doc:subclauses(
        g36:SingleZoneVAVAirHandlingUnit
        g36:SingleZoneVAVAirHandlingUnitAnnotation
        g36:SingleZoneVAVAirHandlingUnit-NoReliefFan
        g36:SingleZoneVAVAirHandlingUnit-NoReliefFanAnnotation
        g36:SingleZoneVAVAirHandlingUnit-WithReliefFan
        g36:SingleZoneVAVAirHandlingUnit-WithReliefFanAnnotation
        g36:SingleZoneVAVAirHandlingUnit-WithReturnFan
        g36:SingleZoneVAVAirHandlingUnit-WithReturnFanAnnotation
)
.
doc:g36components
    doc:title "Model Components" ;
    rdfs:comment "This section describes the classes representing common components used in each of the Guildine 36 example models and classes." ;
    doc:subclauses(
        g36:Damper
        g36:DamperAnnotation
        g36:TwoPositionDamper
        g36:TwoPositionDamperAnnotation
        g36:HotWaterCoil
        g36:HotWaterCoilAnnotation
        g36:ElectricHeatingCoil
        g36:ElectricHeatingCoilAnnotation
        g36:HotWaterValve
        g36:HotWaterValveAnnotation
        g36:ChilledWaterCoil
        g36:ChilledWaterCoilAnnotation
        g36:ChilledWaterValve
        g36:ChilledWaterValveAnnotation
        g36:Zone
        g36:ZoneAnnotation
        g36:ZoneGroup
        g36:ZoneGroupAnnotation
        g36:Fan
        g36:FanAnnotation
        g36:FanWithVFD
        g36:FanWithVFDAnnotation
    )
.
